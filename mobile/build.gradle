apply plugin: 'com.android.application'

dependencies {
    compile project(':core')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'com.android.support:support-v13:21.0.0'
    compile "com.android.support:appcompat-v7:21.0.3"
    compile 'com.android.support:recyclerview-v7:21.0.3'
    compile 'io.reactivex:rxandroid:0.24.0'

    // ImageLoading! Keeping image-loader here to help beta test
    compile 'com.novoda:image-loader:2.0-BETA'
    compile 'com.github.bumptech.glide:glide:3.4.0'
}

def tmdbApiKey = hasProperty('tmdbApiKey') ? tmdbApiKey : 'provide this in gradle.properties'
def signingStoreFile = hasProperty('signingStoreFile') ? signingStoreFile : 'provide this in gradle.properties'
def signingStorePassword = hasProperty('signingStorePassword') ? signingStorePassword : 'provide this in gradle.properties'
def signingKeyAlias = hasProperty('signingKeyAlias') ? signingKeyAlias : 'provide this in gradle.properties'
def signingKeyPassword = hasProperty('signingKeyPassword') ? signingKeyPassword : 'provide this in gradle.properties'

android {
    compileSdkVersion 21
    buildToolsVersion '21.1.2'

    defaultConfig {
        applicationId "com.ataulm.wutson2"
        minSdkVersion 16
        targetSdkVersion 21
        versionCode 1
        versionName '0.0.1'

        Calendar instance = Calendar.getInstance()
        instance.setTimeInMillis(System.currentTimeMillis())
        def buildTime = instance.getTime()
        buildConfigField "String", "BUILD_TIME", "\"$buildTime\""

        buildConfigField "String", "TMDB_API_KEY", "\"$tmdbApiKey\""
    }

    signingConfigs {
        release {
            storeFile file(signingStoreFile)
            storePassword signingStorePassword
            keyAlias signingKeyAlias
            keyPassword signingKeyPassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        lintConfig file("lint-config.xml")
    }

}
